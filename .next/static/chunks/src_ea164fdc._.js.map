{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/educator/FileUpload.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\nexport default function FileUpload() {\n  const [file, setFile] = useState<File | null>(null);\n  const [contentType, setContentType] = useState(\"video\");\n  const [targetLevel, setTargetLevel] = useState(\"beginner\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [preview, setPreview] = useState<any>(null);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (selectedFile) {\n      if (selectedFile.type !== \"text/plain\") {\n        setMessage(\"Please upload a text file (.txt)\");\n        return;\n      }\n      setFile(selectedFile);\n      setMessage(\"\");\n    }\n  };\n\n  const uploadContent = async () => {\n    if (!file) {\n      setMessage(\"Please select a file to upload.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const reader = new FileReader();\n      reader.onload = async (e) => {\n        const fileContent = e.target?.result;\n        if (typeof fileContent !== \"string\") {\n          setMessage(\"Error reading file content.\");\n          setLoading(false);\n          return;\n        }\n\n        const payload = {\n          content: fileContent,\n          contentType,\n          targetLevel,\n        };\n\n        const res = await fetch(\"/api/content\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(payload),\n        });\n\n        const data = await res.json();\n        if (res.ok) {\n          setMessage(\"Content processed successfully!\");\n          setPreview(data);\n        } else {\n          setMessage(data.error || \"An error occurred while processing the content.\");\n        }\n        setLoading(false);\n      };\n      reader.readAsText(file);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setMessage(\"An unexpected error occurred.\");\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-bold\">Upload Learning Material</CardTitle>\n        <p className=\"text-gray-600\">\n          Upload your course material as a text file. The system will automatically segment it into bite-sized learning modules.\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors\">\n          <input\n            type=\"file\"\n            accept=\".txt\"\n            onChange={handleFileChange}\n            className=\"hidden\"\n            id=\"file-upload\"\n          />\n          <label\n            htmlFor=\"file-upload\"\n            className=\"cursor-pointer flex flex-col items-center justify-center\"\n          >\n            <svg\n              className=\"w-12 h-12 text-gray-400 mb-4\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n              />\n            </svg>\n            <span className=\"text-gray-600\">\n              {file ? file.name : \"Click to select a file or drag and drop\"}\n            </span>\n          </label>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Content Type\n            </label>\n            <select\n              value={contentType}\n              onChange={(e) => setContentType(e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-black\"\n            >\n              <option value=\"video\">Video</option>\n              <option value=\"flashcard\">Flashcard</option>\n              <option value=\"quiz\">Quiz</option>\n              <option value=\"exercise\">Exercise</option>\n              <option value=\"casestudy\">Case Study</option>\n            </select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Target Level\n            </label>\n            <select\n              value={targetLevel}\n              onChange={(e) => setTargetLevel(e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-black\"\n            >\n              <option value=\"beginner\">Beginner</option>\n              <option value=\"intermediate\">Intermediate</option>\n              <option value=\"advanced\">Advanced</option>\n            </select>\n          </div>\n        </div>\n\n        <button\n          onClick={uploadContent}\n          disabled={loading || !file}\n          className={`w-full py-3 px-4 rounded-md text-white transition-colors ${\n            loading || !file\n              ? \"bg-gray-400 cursor-not-allowed\"\n              : \"bg-black hover:bg-gray-800\"\n          }`}\n        >\n          {loading ? \"Processing...\" : \"Upload and Process\"}\n        </button>\n\n        {message && (\n          <div\n            className={`p-4 rounded-md ${\n              message.includes(\"success\")\n                ? \"bg-green-50 text-green-800\"\n                : \"bg-red-50 text-red-800\"\n            }`}\n          >\n            {message}\n          </div>\n        )}\n\n        {preview && (\n          <div className=\"mt-6 space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Processed Content Preview</h3>\n            <div className=\"border rounded-md p-4 space-y-4\">\n              <div>\n                <h4 className=\"font-medium\">Segments ({preview.segments.length})</h4>\n                <ul className=\"list-disc pl-5 space-y-2\">\n                  {preview.segments.map((segment: any, index: number) => (\n                    <li key={index}>\n                      {segment.title} - {segment.type} ({segment.difficulty})\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-medium\">Total Duration</h4>\n                <p>{preview.totalDuration} minutes</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/educator/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport FileUpload from \"@/components/educator/FileUpload\";\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\ninterface AnalyticsData {\n  classEngagement: number;\n  topContent: string[];\n  commonQuizMistakes: {\n    quizId: string;\n    topic: string;\n    mistakeCount: number;\n  }[];\n  topQuestions: {\n    question: string;\n    frequency: number;\n  }[];\n  learningProgress: {\n    date: string;\n    completionRate: number;\n    averageScore: number;\n  }[];\n}\n\nexport default function EducatorDashboard() {\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData>({\n    classEngagement: 78,\n    topContent: [\"Introduction to AI\", \"Machine Learning Basics\", \"Neural Networks\"],\n    commonQuizMistakes: [\n      { quizId: \"quiz-3\", topic: \"Cognitive Load Theory\", mistakeCount: 15 },\n      { quizId: \"quiz-5\", topic: \"Spaced Repetition\", mistakeCount: 12 },\n    ],\n    topQuestions: [\n      { question: \"What is microlearning?\", frequency: 25 },\n      { question: \"How does AI work?\", frequency: 20 },\n    ],\n    learningProgress: [\n      { date: \"2024-01\", completionRate: 65, averageScore: 72 },\n      { date: \"2024-02\", completionRate: 70, averageScore: 75 },\n      { date: \"2024-03\", completionRate: 78, averageScore: 80 },\n    ],\n  });\n\n  return (\n    <main className=\"max-w-7xl mx-auto p-6 space-y-8\">\n      <header className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-4xl font-bold mb-2\">Educator Analytics Dashboard</h1>\n          <p className=\"text-gray-600\">Track student progress and optimize content delivery</p>\n        </div>\n        <div className=\"flex gap-4\">\n          <button className=\"bg-black text-white px-4 py-2 rounded-lg\">\n            Export Report\n          </button>\n          <button className=\"border border-black px-4 py-2 rounded-lg\">\n            Settings\n          </button>\n        </div>\n      </header>\n\n      <Tabs defaultValue=\"overview\" className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-5 gap-4\">\n          <TabsTrigger value=\"upload\">Upload</TabsTrigger>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"content\">Content Analysis</TabsTrigger>\n          <TabsTrigger value=\"students\">Student Progress</TabsTrigger>\n          <TabsTrigger value=\"insights\">AI Insights</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"upload\" className=\"space-y-4\">\n          <FileUpload />\n        </TabsContent>\n\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Class Engagement</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\">{analyticsData.classEngagement}%</p>\n                <p className=\"text-sm text-gray-500\">+5% from last month</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Active Students</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\">45</p>\n                <p className=\"text-sm text-gray-500\">Out of 50 enrolled</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Average Quiz Score</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\">82%</p>\n                <p className=\"text-sm text-gray-500\">+3% improvement</p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Content Completion</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-3xl font-bold\">67%</p>\n                <p className=\"text-sm text-gray-500\">Course-wide average</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Learning Progress Over Time</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <LineChart\n                  width={500}\n                  height={300}\n                  data={analyticsData.learningProgress}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"completionRate\"\n                    stroke=\"#000000\"\n                    name=\"Completion Rate\"\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"averageScore\"\n                    stroke=\"#666666\"\n                    name=\"Average Score\"\n                  />\n                </LineChart>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Common Quiz Mistakes</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <BarChart\n                  width={500}\n                  height={300}\n                  data={analyticsData.commonQuizMistakes}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"topic\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"mistakeCount\" fill=\"#000000\" name=\"Mistake Count\" />\n                </BarChart>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"content\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Most Completed Content</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {analyticsData.topContent.map((content, index) => (\n                    <li key={index} className=\"flex justify-between items-center\">\n                      <span>{content}</span>\n                      <span className=\"text-gray-500\">\n                        {90 - index * 10}% completion\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Top AI Chatbot Questions</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {analyticsData.topQuestions.map((item, index) => (\n                    <li key={index} className=\"flex justify-between items-center\">\n                      <span>{item.question}</span>\n                      <span className=\"text-gray-500\">\n                        {item.frequency} times asked\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAXA;;;;;;AA0Ce,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;QAChE,iBAAiB;QACjB,YAAY;YAAC;YAAsB;YAA2B;SAAkB;QAChF,oBAAoB;YAClB;gBAAE,QAAQ;gBAAU,OAAO;gBAAyB,cAAc;YAAG;YACrE;gBAAE,QAAQ;gBAAU,OAAO;gBAAqB,cAAc;YAAG;SAClE;QACD,cAAc;YACZ;gBAAE,UAAU;gBAA0B,WAAW;YAAG;YACpD;gBAAE,UAAU;gBAAqB,WAAW;YAAG;SAChD;QACD,kBAAkB;YAChB;gBAAE,MAAM;gBAAW,gBAAgB;gBAAI,cAAc;YAAG;YACxD;gBAAE,MAAM;gBAAW,gBAAgB;gBAAI,cAAc;YAAG;YACxD;gBAAE,MAAM;gBAAW,gBAAgB;gBAAI,cAAc;YAAG;SACzD;IACH;IAEA,qBACE,6LAAC;QAAK,WAAU;;0BACd,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,6LAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAE/B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAO,WAAU;0CAA2C;;;;;;0CAG7D,6LAAC;gCAAO,WAAU;0CAA2C;;;;;;;;;;;;;;;;;;0BAMjE,6LAAC,mIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,6LAAC,mIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAClB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAS;;;;;;0CAC5B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAU;;;;;;0CAC7B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;;;;;;;kCAGhC,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAS,WAAU;kCACpC,cAAA,6LAAC,+IAAA,CAAA,UAAU;;;;;;;;;;kCAGb,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAW,WAAU;;0CACtC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;;kEACV,6LAAC;wDAAE,WAAU;;4DAAsB,cAAc,eAAe;4DAAC;;;;;;;kEACjE,6LAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAIzC,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;;kEACV,6LAAC;wDAAE,WAAU;kEAAqB;;;;;;kEAClC,6LAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAIzC,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;;kEACV,6LAAC;wDAAE,WAAU;kEAAqB;;;;;;kEAClC,6LAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAIzC,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;;kEACV,6LAAC;wDAAE,WAAU;kEAAqB;;;;;;kEAClC,6LAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;;;;;;;0CAK3C,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;0DACV,cAAA,6LAAC,wJAAA,CAAA,YAAS;oDACR,OAAO;oDACP,QAAQ;oDACR,MAAM,cAAc,gBAAgB;oDACpC,QAAQ;wDAAE,KAAK;wDAAG,OAAO;wDAAI,MAAM;wDAAI,QAAQ;oDAAE;;sEAEjD,6LAAC,gKAAA,CAAA,gBAAa;4DAAC,iBAAgB;;;;;;sEAC/B,6LAAC,wJAAA,CAAA,QAAK;4DAAC,SAAQ;;;;;;sEACf,6LAAC,wJAAA,CAAA,QAAK;;;;;sEACN,6LAAC,0JAAA,CAAA,UAAO;;;;;sEACR,6LAAC,yJAAA,CAAA,SAAM;;;;;sEACP,6LAAC,uJAAA,CAAA,OAAI;4DACH,MAAK;4DACL,SAAQ;4DACR,QAAO;4DACP,MAAK;;;;;;sEAEP,6LAAC,uJAAA,CAAA,OAAI;4DACH,MAAK;4DACL,SAAQ;4DACR,QAAO;4DACP,MAAK;;;;;;;;;;;;;;;;;;;;;;;kDAMb,6LAAC,mIAAA,CAAA,OAAI;;0DACH,6LAAC,mIAAA,CAAA,aAAU;0DACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;;;;;;0DAEb,6LAAC,mIAAA,CAAA,cAAW;0DACV,cAAA,6LAAC,uJAAA,CAAA,WAAQ;oDACP,OAAO;oDACP,QAAQ;oDACR,MAAM,cAAc,kBAAkB;oDACtC,QAAQ;wDAAE,KAAK;wDAAG,OAAO;wDAAI,MAAM;wDAAI,QAAQ;oDAAE;;sEAEjD,6LAAC,gKAAA,CAAA,gBAAa;4DAAC,iBAAgB;;;;;;sEAC/B,6LAAC,wJAAA,CAAA,QAAK;4DAAC,SAAQ;;;;;;sEACf,6LAAC,wJAAA,CAAA,QAAK;;;;;sEACN,6LAAC,0JAAA,CAAA,UAAO;;;;;sEACR,6LAAC,sJAAA,CAAA,MAAG;4DAAC,SAAQ;4DAAe,MAAK;4DAAU,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO1D,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAU,WAAU;kCACrC,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;sDACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAG,WAAU;0DACX,cAAc,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,sBACtC,6LAAC;wDAAe,WAAU;;0EACxB,6LAAC;0EAAM;;;;;;0EACP,6LAAC;gEAAK,WAAU;;oEACb,KAAK,QAAQ;oEAAG;;;;;;;;uDAHZ;;;;;;;;;;;;;;;;;;;;;8CAWjB,6LAAC,mIAAA,CAAA,OAAI;;sDACH,6LAAC,mIAAA,CAAA,aAAU;sDACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;0DAAC;;;;;;;;;;;sDAEb,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAG,WAAU;0DACX,cAAc,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,sBACrC,6LAAC;wDAAe,WAAU;;0EACxB,6LAAC;0EAAM,KAAK,QAAQ;;;;;;0EACpB,6LAAC;gEAAK,WAAU;;oEACb,KAAK,SAAS;oEAAC;;;;;;;;uDAHX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAe7B;GA7LwB;KAAA","debugId":null}}]
}